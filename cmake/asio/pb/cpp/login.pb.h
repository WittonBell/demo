// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: login.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_login_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_login_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "enums.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_login_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_login_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_login_2eproto;
namespace netmsg {
class pbPingPong;
struct pbPingPongDefaultTypeInternal;
extern pbPingPongDefaultTypeInternal _pbPingPong_default_instance_;
class pbReqLogin;
struct pbReqLoginDefaultTypeInternal;
extern pbReqLoginDefaultTypeInternal _pbReqLogin_default_instance_;
class pbReqReg;
struct pbReqRegDefaultTypeInternal;
extern pbReqRegDefaultTypeInternal _pbReqReg_default_instance_;
class pbRspLogin;
struct pbRspLoginDefaultTypeInternal;
extern pbRspLoginDefaultTypeInternal _pbRspLogin_default_instance_;
class pbRspReg;
struct pbRspRegDefaultTypeInternal;
extern pbRspRegDefaultTypeInternal _pbRspReg_default_instance_;
class pbSysInfo;
struct pbSysInfoDefaultTypeInternal;
extern pbSysInfoDefaultTypeInternal _pbSysInfo_default_instance_;
}  // namespace netmsg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace netmsg {

// ===================================================================


// -------------------------------------------------------------------

class pbSysInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:netmsg.pbSysInfo) */ {
 public:
  inline pbSysInfo() : pbSysInfo(nullptr) {}
  ~pbSysInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR pbSysInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline pbSysInfo(const pbSysInfo& from) : pbSysInfo(nullptr, from) {}
  inline pbSysInfo(pbSysInfo&& from) noexcept
      : pbSysInfo(nullptr, std::move(from)) {}
  inline pbSysInfo& operator=(const pbSysInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline pbSysInfo& operator=(pbSysInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const pbSysInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const pbSysInfo* internal_default_instance() {
    return reinterpret_cast<const pbSysInfo*>(
        &_pbSysInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(pbSysInfo& a, pbSysInfo& b) { a.Swap(&b); }
  inline void Swap(pbSysInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(pbSysInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  pbSysInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<pbSysInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const pbSysInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const pbSysInfo& from) { pbSysInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(pbSysInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "netmsg.pbSysInfo"; }

 protected:
  explicit pbSysInfo(::google::protobuf::Arena* arena);
  pbSysInfo(::google::protobuf::Arena* arena, const pbSysInfo& from);
  pbSysInfo(::google::protobuf::Arena* arena, pbSysInfo&& from) noexcept
      : pbSysInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUniqueIdFieldNumber = 2,
    kDeviceModelFieldNumber = 3,
    kOSFieldNumber = 4,
    kRuntimePlatformFieldNumber = 1,
  };
  // string UniqueId = 2;
  void clear_uniqueid() ;
  const std::string& uniqueid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uniqueid(Arg_&& arg, Args_... args);
  std::string* mutable_uniqueid();
  PROTOBUF_NODISCARD std::string* release_uniqueid();
  void set_allocated_uniqueid(std::string* value);

  private:
  const std::string& _internal_uniqueid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uniqueid(
      const std::string& value);
  std::string* _internal_mutable_uniqueid();

  public:
  // string DeviceModel = 3;
  void clear_devicemodel() ;
  const std::string& devicemodel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_devicemodel(Arg_&& arg, Args_... args);
  std::string* mutable_devicemodel();
  PROTOBUF_NODISCARD std::string* release_devicemodel();
  void set_allocated_devicemodel(std::string* value);

  private:
  const std::string& _internal_devicemodel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_devicemodel(
      const std::string& value);
  std::string* _internal_mutable_devicemodel();

  public:
  // string OS = 4;
  void clear_os() ;
  const std::string& os() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_os(Arg_&& arg, Args_... args);
  std::string* mutable_os();
  PROTOBUF_NODISCARD std::string* release_os();
  void set_allocated_os(std::string* value);

  private:
  const std::string& _internal_os() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_os(
      const std::string& value);
  std::string* _internal_mutable_os();

  public:
  // uint32 RuntimePlatform = 1;
  void clear_runtimeplatform() ;
  ::uint32_t runtimeplatform() const;
  void set_runtimeplatform(::uint32_t value);

  private:
  ::uint32_t _internal_runtimeplatform() const;
  void _internal_set_runtimeplatform(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:netmsg.pbSysInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      46, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_pbSysInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const pbSysInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr uniqueid_;
    ::google::protobuf::internal::ArenaStringPtr devicemodel_;
    ::google::protobuf::internal::ArenaStringPtr os_;
    ::uint32_t runtimeplatform_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class pbRspReg final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:netmsg.pbRspReg) */ {
 public:
  inline pbRspReg() : pbRspReg(nullptr) {}
  ~pbRspReg() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR pbRspReg(
      ::google::protobuf::internal::ConstantInitialized);

  inline pbRspReg(const pbRspReg& from) : pbRspReg(nullptr, from) {}
  inline pbRspReg(pbRspReg&& from) noexcept
      : pbRspReg(nullptr, std::move(from)) {}
  inline pbRspReg& operator=(const pbRspReg& from) {
    CopyFrom(from);
    return *this;
  }
  inline pbRspReg& operator=(pbRspReg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const pbRspReg& default_instance() {
    return *internal_default_instance();
  }
  static inline const pbRspReg* internal_default_instance() {
    return reinterpret_cast<const pbRspReg*>(
        &_pbRspReg_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(pbRspReg& a, pbRspReg& b) { a.Swap(&b); }
  inline void Swap(pbRspReg* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(pbRspReg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  pbRspReg* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<pbRspReg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const pbRspReg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const pbRspReg& from) { pbRspReg::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(pbRspReg* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "netmsg.pbRspReg"; }

 protected:
  explicit pbRspReg(::google::protobuf::Arena* arena);
  pbRspReg(::google::protobuf::Arena* arena, const pbRspReg& from);
  pbRspReg(::google::protobuf::Arena* arena, pbRspReg&& from) noexcept
      : pbRspReg(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // .netmsg.EUserErrorType result = 1;
  void clear_result() ;
  ::netmsg::EUserErrorType result() const;
  void set_result(::netmsg::EUserErrorType value);

  private:
  ::netmsg::EUserErrorType _internal_result() const;
  void _internal_set_result(::netmsg::EUserErrorType value);

  public:
  // @@protoc_insertion_point(class_scope:netmsg.pbRspReg)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_pbRspReg_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const pbRspReg& from_msg);
    int result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class pbRspLogin final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:netmsg.pbRspLogin) */ {
 public:
  inline pbRspLogin() : pbRspLogin(nullptr) {}
  ~pbRspLogin() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR pbRspLogin(
      ::google::protobuf::internal::ConstantInitialized);

  inline pbRspLogin(const pbRspLogin& from) : pbRspLogin(nullptr, from) {}
  inline pbRspLogin(pbRspLogin&& from) noexcept
      : pbRspLogin(nullptr, std::move(from)) {}
  inline pbRspLogin& operator=(const pbRspLogin& from) {
    CopyFrom(from);
    return *this;
  }
  inline pbRspLogin& operator=(pbRspLogin&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const pbRspLogin& default_instance() {
    return *internal_default_instance();
  }
  static inline const pbRspLogin* internal_default_instance() {
    return reinterpret_cast<const pbRspLogin*>(
        &_pbRspLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(pbRspLogin& a, pbRspLogin& b) { a.Swap(&b); }
  inline void Swap(pbRspLogin* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(pbRspLogin* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  pbRspLogin* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<pbRspLogin>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const pbRspLogin& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const pbRspLogin& from) { pbRspLogin::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(pbRspLogin* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "netmsg.pbRspLogin"; }

 protected:
  explicit pbRspLogin(::google::protobuf::Arena* arena);
  pbRspLogin(::google::protobuf::Arena* arena, const pbRspLogin& from);
  pbRspLogin(::google::protobuf::Arena* arena, pbRspLogin&& from) noexcept
      : pbRspLogin(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVerifyKeyFieldNumber = 4,
    kAccountFieldNumber = 5,
    kUserIdFieldNumber = 2,
    kResultFieldNumber = 1,
    kBanTimeFieldNumber = 3,
  };
  // string verifyKey = 4;
  void clear_verifykey() ;
  const std::string& verifykey() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_verifykey(Arg_&& arg, Args_... args);
  std::string* mutable_verifykey();
  PROTOBUF_NODISCARD std::string* release_verifykey();
  void set_allocated_verifykey(std::string* value);

  private:
  const std::string& _internal_verifykey() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_verifykey(
      const std::string& value);
  std::string* _internal_mutable_verifykey();

  public:
  // string account = 5;
  void clear_account() ;
  const std::string& account() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account(Arg_&& arg, Args_... args);
  std::string* mutable_account();
  PROTOBUF_NODISCARD std::string* release_account();
  void set_allocated_account(std::string* value);

  private:
  const std::string& _internal_account() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account(
      const std::string& value);
  std::string* _internal_mutable_account();

  public:
  // uint64 userId = 2;
  void clear_userid() ;
  ::uint64_t userid() const;
  void set_userid(::uint64_t value);

  private:
  ::uint64_t _internal_userid() const;
  void _internal_set_userid(::uint64_t value);

  public:
  // .netmsg.EUserErrorType result = 1;
  void clear_result() ;
  ::netmsg::EUserErrorType result() const;
  void set_result(::netmsg::EUserErrorType value);

  private:
  ::netmsg::EUserErrorType _internal_result() const;
  void _internal_set_result(::netmsg::EUserErrorType value);

  public:
  // uint32 banTime = 3;
  void clear_bantime() ;
  ::uint32_t bantime() const;
  void set_bantime(::uint32_t value);

  private:
  ::uint32_t _internal_bantime() const;
  void _internal_set_bantime(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:netmsg.pbRspLogin)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      42, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_pbRspLogin_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const pbRspLogin& from_msg);
    ::google::protobuf::internal::ArenaStringPtr verifykey_;
    ::google::protobuf::internal::ArenaStringPtr account_;
    ::uint64_t userid_;
    int result_;
    ::uint32_t bantime_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class pbReqReg final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:netmsg.pbReqReg) */ {
 public:
  inline pbReqReg() : pbReqReg(nullptr) {}
  ~pbReqReg() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR pbReqReg(
      ::google::protobuf::internal::ConstantInitialized);

  inline pbReqReg(const pbReqReg& from) : pbReqReg(nullptr, from) {}
  inline pbReqReg(pbReqReg&& from) noexcept
      : pbReqReg(nullptr, std::move(from)) {}
  inline pbReqReg& operator=(const pbReqReg& from) {
    CopyFrom(from);
    return *this;
  }
  inline pbReqReg& operator=(pbReqReg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const pbReqReg& default_instance() {
    return *internal_default_instance();
  }
  static inline const pbReqReg* internal_default_instance() {
    return reinterpret_cast<const pbReqReg*>(
        &_pbReqReg_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(pbReqReg& a, pbReqReg& b) { a.Swap(&b); }
  inline void Swap(pbReqReg* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(pbReqReg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  pbReqReg* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<pbReqReg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const pbReqReg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const pbReqReg& from) { pbReqReg::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(pbReqReg* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "netmsg.pbReqReg"; }

 protected:
  explicit pbReqReg(::google::protobuf::Arena* arena);
  pbReqReg(::google::protobuf::Arena* arena, const pbReqReg& from);
  pbReqReg(::google::protobuf::Arena* arena, pbReqReg&& from) noexcept
      : pbReqReg(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUserNameFieldNumber = 1,
    kPswFieldNumber = 2,
    kChannelFieldNumber = 3,
  };
  // string userName = 1;
  void clear_username() ;
  const std::string& username() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_username(Arg_&& arg, Args_... args);
  std::string* mutable_username();
  PROTOBUF_NODISCARD std::string* release_username();
  void set_allocated_username(std::string* value);

  private:
  const std::string& _internal_username() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_username(
      const std::string& value);
  std::string* _internal_mutable_username();

  public:
  // bytes psw = 2;
  void clear_psw() ;
  const std::string& psw() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_psw(Arg_&& arg, Args_... args);
  std::string* mutable_psw();
  PROTOBUF_NODISCARD std::string* release_psw();
  void set_allocated_psw(std::string* value);

  private:
  const std::string& _internal_psw() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_psw(
      const std::string& value);
  std::string* _internal_mutable_psw();

  public:
  // string channel = 3;
  void clear_channel() ;
  const std::string& channel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_channel(Arg_&& arg, Args_... args);
  std::string* mutable_channel();
  PROTOBUF_NODISCARD std::string* release_channel();
  void set_allocated_channel(std::string* value);

  private:
  const std::string& _internal_channel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_channel(
      const std::string& value);
  std::string* _internal_mutable_channel();

  public:
  // @@protoc_insertion_point(class_scope:netmsg.pbReqReg)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      39, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_pbReqReg_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const pbReqReg& from_msg);
    ::google::protobuf::internal::ArenaStringPtr username_;
    ::google::protobuf::internal::ArenaStringPtr psw_;
    ::google::protobuf::internal::ArenaStringPtr channel_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class pbPingPong final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:netmsg.pbPingPong) */ {
 public:
  inline pbPingPong() : pbPingPong(nullptr) {}
  ~pbPingPong() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR pbPingPong(
      ::google::protobuf::internal::ConstantInitialized);

  inline pbPingPong(const pbPingPong& from) : pbPingPong(nullptr, from) {}
  inline pbPingPong(pbPingPong&& from) noexcept
      : pbPingPong(nullptr, std::move(from)) {}
  inline pbPingPong& operator=(const pbPingPong& from) {
    CopyFrom(from);
    return *this;
  }
  inline pbPingPong& operator=(pbPingPong&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const pbPingPong& default_instance() {
    return *internal_default_instance();
  }
  static inline const pbPingPong* internal_default_instance() {
    return reinterpret_cast<const pbPingPong*>(
        &_pbPingPong_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(pbPingPong& a, pbPingPong& b) { a.Swap(&b); }
  inline void Swap(pbPingPong* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(pbPingPong* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  pbPingPong* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<pbPingPong>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const pbPingPong& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const pbPingPong& from) { pbPingPong::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(pbPingPong* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "netmsg.pbPingPong"; }

 protected:
  explicit pbPingPong(::google::protobuf::Arena* arena);
  pbPingPong(::google::protobuf::Arena* arena, const pbPingPong& from);
  pbPingPong(::google::protobuf::Arena* arena, pbPingPong&& from) noexcept
      : pbPingPong(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimeFieldNumber = 1,
  };
  // uint32 time = 1;
  void clear_time() ;
  ::uint32_t time() const;
  void set_time(::uint32_t value);

  private:
  ::uint32_t _internal_time() const;
  void _internal_set_time(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:netmsg.pbPingPong)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_pbPingPong_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const pbPingPong& from_msg);
    ::uint32_t time_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};
// -------------------------------------------------------------------

class pbReqLogin final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:netmsg.pbReqLogin) */ {
 public:
  inline pbReqLogin() : pbReqLogin(nullptr) {}
  ~pbReqLogin() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR pbReqLogin(
      ::google::protobuf::internal::ConstantInitialized);

  inline pbReqLogin(const pbReqLogin& from) : pbReqLogin(nullptr, from) {}
  inline pbReqLogin(pbReqLogin&& from) noexcept
      : pbReqLogin(nullptr, std::move(from)) {}
  inline pbReqLogin& operator=(const pbReqLogin& from) {
    CopyFrom(from);
    return *this;
  }
  inline pbReqLogin& operator=(pbReqLogin&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const pbReqLogin& default_instance() {
    return *internal_default_instance();
  }
  static inline const pbReqLogin* internal_default_instance() {
    return reinterpret_cast<const pbReqLogin*>(
        &_pbReqLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(pbReqLogin& a, pbReqLogin& b) { a.Swap(&b); }
  inline void Swap(pbReqLogin* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(pbReqLogin* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  pbReqLogin* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<pbReqLogin>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const pbReqLogin& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const pbReqLogin& from) { pbReqLogin::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(pbReqLogin* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "netmsg.pbReqLogin"; }

 protected:
  explicit pbReqLogin(::google::protobuf::Arena* arena);
  pbReqLogin(::google::protobuf::Arena* arena, const pbReqLogin& from);
  pbReqLogin(::google::protobuf::Arena* arena, pbReqLogin&& from) noexcept
      : pbReqLogin(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUserNameFieldNumber = 1,
    kPswFieldNumber = 2,
    kExtDataFieldNumber = 7,
    kSysInfoDataFieldNumber = 6,
    kUserTypeFieldNumber = 3,
    kChannelTypeFieldNumber = 4,
    kVersionFieldNumber = 5,
  };
  // string userName = 1;
  void clear_username() ;
  const std::string& username() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_username(Arg_&& arg, Args_... args);
  std::string* mutable_username();
  PROTOBUF_NODISCARD std::string* release_username();
  void set_allocated_username(std::string* value);

  private:
  const std::string& _internal_username() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_username(
      const std::string& value);
  std::string* _internal_mutable_username();

  public:
  // bytes psw = 2;
  void clear_psw() ;
  const std::string& psw() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_psw(Arg_&& arg, Args_... args);
  std::string* mutable_psw();
  PROTOBUF_NODISCARD std::string* release_psw();
  void set_allocated_psw(std::string* value);

  private:
  const std::string& _internal_psw() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_psw(
      const std::string& value);
  std::string* _internal_mutable_psw();

  public:
  // string ExtData = 7;
  void clear_extdata() ;
  const std::string& extdata() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_extdata(Arg_&& arg, Args_... args);
  std::string* mutable_extdata();
  PROTOBUF_NODISCARD std::string* release_extdata();
  void set_allocated_extdata(std::string* value);

  private:
  const std::string& _internal_extdata() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_extdata(
      const std::string& value);
  std::string* _internal_mutable_extdata();

  public:
  // .netmsg.pbSysInfo sysInfoData = 6;
  bool has_sysinfodata() const;
  void clear_sysinfodata() ;
  const ::netmsg::pbSysInfo& sysinfodata() const;
  PROTOBUF_NODISCARD ::netmsg::pbSysInfo* release_sysinfodata();
  ::netmsg::pbSysInfo* mutable_sysinfodata();
  void set_allocated_sysinfodata(::netmsg::pbSysInfo* value);
  void unsafe_arena_set_allocated_sysinfodata(::netmsg::pbSysInfo* value);
  ::netmsg::pbSysInfo* unsafe_arena_release_sysinfodata();

  private:
  const ::netmsg::pbSysInfo& _internal_sysinfodata() const;
  ::netmsg::pbSysInfo* _internal_mutable_sysinfodata();

  public:
  // .netmsg.EUserType userType = 3;
  void clear_usertype() ;
  ::netmsg::EUserType usertype() const;
  void set_usertype(::netmsg::EUserType value);

  private:
  ::netmsg::EUserType _internal_usertype() const;
  void _internal_set_usertype(::netmsg::EUserType value);

  public:
  // .netmsg.EChannelType channelType = 4;
  void clear_channeltype() ;
  ::netmsg::EChannelType channeltype() const;
  void set_channeltype(::netmsg::EChannelType value);

  private:
  ::netmsg::EChannelType _internal_channeltype() const;
  void _internal_set_channeltype(::netmsg::EChannelType value);

  public:
  // uint32 version = 5;
  void clear_version() ;
  ::uint32_t version() const;
  void set_version(::uint32_t value);

  private:
  ::uint32_t _internal_version() const;
  void _internal_set_version(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:netmsg.pbReqLogin)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      41, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_pbReqLogin_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const pbReqLogin& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr username_;
    ::google::protobuf::internal::ArenaStringPtr psw_;
    ::google::protobuf::internal::ArenaStringPtr extdata_;
    ::netmsg::pbSysInfo* sysinfodata_;
    int usertype_;
    int channeltype_;
    ::uint32_t version_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_login_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// pbPingPong

// uint32 time = 1;
inline void pbPingPong::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_ = 0u;
}
inline ::uint32_t pbPingPong::time() const {
  // @@protoc_insertion_point(field_get:netmsg.pbPingPong.time)
  return _internal_time();
}
inline void pbPingPong::set_time(::uint32_t value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:netmsg.pbPingPong.time)
}
inline ::uint32_t pbPingPong::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_;
}
inline void pbPingPong::_internal_set_time(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_ = value;
}

// -------------------------------------------------------------------

// pbReqReg

// string userName = 1;
inline void pbReqReg::clear_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.ClearToEmpty();
}
inline const std::string& pbReqReg::username() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:netmsg.pbReqReg.userName)
  return _internal_username();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void pbReqReg::set_username(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:netmsg.pbReqReg.userName)
}
inline std::string* pbReqReg::mutable_username() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_username();
  // @@protoc_insertion_point(field_mutable:netmsg.pbReqReg.userName)
  return _s;
}
inline const std::string& pbReqReg::_internal_username() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.username_.Get();
}
inline void pbReqReg::_internal_set_username(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.Set(value, GetArena());
}
inline std::string* pbReqReg::_internal_mutable_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.username_.Mutable( GetArena());
}
inline std::string* pbReqReg::release_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:netmsg.pbReqReg.userName)
  return _impl_.username_.Release();
}
inline void pbReqReg::set_allocated_username(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.username_.IsDefault()) {
          _impl_.username_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:netmsg.pbReqReg.userName)
}

// bytes psw = 2;
inline void pbReqReg::clear_psw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.psw_.ClearToEmpty();
}
inline const std::string& pbReqReg::psw() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:netmsg.pbReqReg.psw)
  return _internal_psw();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void pbReqReg::set_psw(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.psw_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:netmsg.pbReqReg.psw)
}
inline std::string* pbReqReg::mutable_psw() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_psw();
  // @@protoc_insertion_point(field_mutable:netmsg.pbReqReg.psw)
  return _s;
}
inline const std::string& pbReqReg::_internal_psw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.psw_.Get();
}
inline void pbReqReg::_internal_set_psw(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.psw_.Set(value, GetArena());
}
inline std::string* pbReqReg::_internal_mutable_psw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.psw_.Mutable( GetArena());
}
inline std::string* pbReqReg::release_psw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:netmsg.pbReqReg.psw)
  return _impl_.psw_.Release();
}
inline void pbReqReg::set_allocated_psw(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.psw_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.psw_.IsDefault()) {
          _impl_.psw_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:netmsg.pbReqReg.psw)
}

// string channel = 3;
inline void pbReqReg::clear_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_.ClearToEmpty();
}
inline const std::string& pbReqReg::channel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:netmsg.pbReqReg.channel)
  return _internal_channel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void pbReqReg::set_channel(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:netmsg.pbReqReg.channel)
}
inline std::string* pbReqReg::mutable_channel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_channel();
  // @@protoc_insertion_point(field_mutable:netmsg.pbReqReg.channel)
  return _s;
}
inline const std::string& pbReqReg::_internal_channel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_.Get();
}
inline void pbReqReg::_internal_set_channel(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_.Set(value, GetArena());
}
inline std::string* pbReqReg::_internal_mutable_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.channel_.Mutable( GetArena());
}
inline std::string* pbReqReg::release_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:netmsg.pbReqReg.channel)
  return _impl_.channel_.Release();
}
inline void pbReqReg::set_allocated_channel(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.channel_.IsDefault()) {
          _impl_.channel_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:netmsg.pbReqReg.channel)
}

// -------------------------------------------------------------------

// pbRspReg

// .netmsg.EUserErrorType result = 1;
inline void pbRspReg::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0;
}
inline ::netmsg::EUserErrorType pbRspReg::result() const {
  // @@protoc_insertion_point(field_get:netmsg.pbRspReg.result)
  return _internal_result();
}
inline void pbRspReg::set_result(::netmsg::EUserErrorType value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:netmsg.pbRspReg.result)
}
inline ::netmsg::EUserErrorType pbRspReg::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::netmsg::EUserErrorType>(_impl_.result_);
}
inline void pbRspReg::_internal_set_result(::netmsg::EUserErrorType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// pbReqLogin

// string userName = 1;
inline void pbReqLogin::clear_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.ClearToEmpty();
}
inline const std::string& pbReqLogin::username() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:netmsg.pbReqLogin.userName)
  return _internal_username();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void pbReqLogin::set_username(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:netmsg.pbReqLogin.userName)
}
inline std::string* pbReqLogin::mutable_username() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_username();
  // @@protoc_insertion_point(field_mutable:netmsg.pbReqLogin.userName)
  return _s;
}
inline const std::string& pbReqLogin::_internal_username() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.username_.Get();
}
inline void pbReqLogin::_internal_set_username(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.Set(value, GetArena());
}
inline std::string* pbReqLogin::_internal_mutable_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.username_.Mutable( GetArena());
}
inline std::string* pbReqLogin::release_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:netmsg.pbReqLogin.userName)
  return _impl_.username_.Release();
}
inline void pbReqLogin::set_allocated_username(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.username_.IsDefault()) {
          _impl_.username_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:netmsg.pbReqLogin.userName)
}

// bytes psw = 2;
inline void pbReqLogin::clear_psw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.psw_.ClearToEmpty();
}
inline const std::string& pbReqLogin::psw() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:netmsg.pbReqLogin.psw)
  return _internal_psw();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void pbReqLogin::set_psw(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.psw_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:netmsg.pbReqLogin.psw)
}
inline std::string* pbReqLogin::mutable_psw() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_psw();
  // @@protoc_insertion_point(field_mutable:netmsg.pbReqLogin.psw)
  return _s;
}
inline const std::string& pbReqLogin::_internal_psw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.psw_.Get();
}
inline void pbReqLogin::_internal_set_psw(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.psw_.Set(value, GetArena());
}
inline std::string* pbReqLogin::_internal_mutable_psw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.psw_.Mutable( GetArena());
}
inline std::string* pbReqLogin::release_psw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:netmsg.pbReqLogin.psw)
  return _impl_.psw_.Release();
}
inline void pbReqLogin::set_allocated_psw(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.psw_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.psw_.IsDefault()) {
          _impl_.psw_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:netmsg.pbReqLogin.psw)
}

// .netmsg.EUserType userType = 3;
inline void pbReqLogin::clear_usertype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.usertype_ = 0;
}
inline ::netmsg::EUserType pbReqLogin::usertype() const {
  // @@protoc_insertion_point(field_get:netmsg.pbReqLogin.userType)
  return _internal_usertype();
}
inline void pbReqLogin::set_usertype(::netmsg::EUserType value) {
  _internal_set_usertype(value);
  // @@protoc_insertion_point(field_set:netmsg.pbReqLogin.userType)
}
inline ::netmsg::EUserType pbReqLogin::_internal_usertype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::netmsg::EUserType>(_impl_.usertype_);
}
inline void pbReqLogin::_internal_set_usertype(::netmsg::EUserType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.usertype_ = value;
}

// .netmsg.EChannelType channelType = 4;
inline void pbReqLogin::clear_channeltype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channeltype_ = 0;
}
inline ::netmsg::EChannelType pbReqLogin::channeltype() const {
  // @@protoc_insertion_point(field_get:netmsg.pbReqLogin.channelType)
  return _internal_channeltype();
}
inline void pbReqLogin::set_channeltype(::netmsg::EChannelType value) {
  _internal_set_channeltype(value);
  // @@protoc_insertion_point(field_set:netmsg.pbReqLogin.channelType)
}
inline ::netmsg::EChannelType pbReqLogin::_internal_channeltype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::netmsg::EChannelType>(_impl_.channeltype_);
}
inline void pbReqLogin::_internal_set_channeltype(::netmsg::EChannelType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channeltype_ = value;
}

// uint32 version = 5;
inline void pbReqLogin::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = 0u;
}
inline ::uint32_t pbReqLogin::version() const {
  // @@protoc_insertion_point(field_get:netmsg.pbReqLogin.version)
  return _internal_version();
}
inline void pbReqLogin::set_version(::uint32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:netmsg.pbReqLogin.version)
}
inline ::uint32_t pbReqLogin::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_;
}
inline void pbReqLogin::_internal_set_version(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = value;
}

// .netmsg.pbSysInfo sysInfoData = 6;
inline bool pbReqLogin::has_sysinfodata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sysinfodata_ != nullptr);
  return value;
}
inline void pbReqLogin::clear_sysinfodata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sysinfodata_ != nullptr) _impl_.sysinfodata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::netmsg::pbSysInfo& pbReqLogin::_internal_sysinfodata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::netmsg::pbSysInfo* p = _impl_.sysinfodata_;
  return p != nullptr ? *p : reinterpret_cast<const ::netmsg::pbSysInfo&>(::netmsg::_pbSysInfo_default_instance_);
}
inline const ::netmsg::pbSysInfo& pbReqLogin::sysinfodata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:netmsg.pbReqLogin.sysInfoData)
  return _internal_sysinfodata();
}
inline void pbReqLogin::unsafe_arena_set_allocated_sysinfodata(::netmsg::pbSysInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sysinfodata_);
  }
  _impl_.sysinfodata_ = reinterpret_cast<::netmsg::pbSysInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:netmsg.pbReqLogin.sysInfoData)
}
inline ::netmsg::pbSysInfo* pbReqLogin::release_sysinfodata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::netmsg::pbSysInfo* released = _impl_.sysinfodata_;
  _impl_.sysinfodata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::netmsg::pbSysInfo* pbReqLogin::unsafe_arena_release_sysinfodata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:netmsg.pbReqLogin.sysInfoData)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::netmsg::pbSysInfo* temp = _impl_.sysinfodata_;
  _impl_.sysinfodata_ = nullptr;
  return temp;
}
inline ::netmsg::pbSysInfo* pbReqLogin::_internal_mutable_sysinfodata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sysinfodata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::netmsg::pbSysInfo>(GetArena());
    _impl_.sysinfodata_ = reinterpret_cast<::netmsg::pbSysInfo*>(p);
  }
  return _impl_.sysinfodata_;
}
inline ::netmsg::pbSysInfo* pbReqLogin::mutable_sysinfodata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::netmsg::pbSysInfo* _msg = _internal_mutable_sysinfodata();
  // @@protoc_insertion_point(field_mutable:netmsg.pbReqLogin.sysInfoData)
  return _msg;
}
inline void pbReqLogin::set_allocated_sysinfodata(::netmsg::pbSysInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.sysinfodata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.sysinfodata_ = reinterpret_cast<::netmsg::pbSysInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:netmsg.pbReqLogin.sysInfoData)
}

// string ExtData = 7;
inline void pbReqLogin::clear_extdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extdata_.ClearToEmpty();
}
inline const std::string& pbReqLogin::extdata() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:netmsg.pbReqLogin.ExtData)
  return _internal_extdata();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void pbReqLogin::set_extdata(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extdata_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:netmsg.pbReqLogin.ExtData)
}
inline std::string* pbReqLogin::mutable_extdata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_extdata();
  // @@protoc_insertion_point(field_mutable:netmsg.pbReqLogin.ExtData)
  return _s;
}
inline const std::string& pbReqLogin::_internal_extdata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.extdata_.Get();
}
inline void pbReqLogin::_internal_set_extdata(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extdata_.Set(value, GetArena());
}
inline std::string* pbReqLogin::_internal_mutable_extdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.extdata_.Mutable( GetArena());
}
inline std::string* pbReqLogin::release_extdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:netmsg.pbReqLogin.ExtData)
  return _impl_.extdata_.Release();
}
inline void pbReqLogin::set_allocated_extdata(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extdata_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.extdata_.IsDefault()) {
          _impl_.extdata_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:netmsg.pbReqLogin.ExtData)
}

// -------------------------------------------------------------------

// pbRspLogin

// .netmsg.EUserErrorType result = 1;
inline void pbRspLogin::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0;
}
inline ::netmsg::EUserErrorType pbRspLogin::result() const {
  // @@protoc_insertion_point(field_get:netmsg.pbRspLogin.result)
  return _internal_result();
}
inline void pbRspLogin::set_result(::netmsg::EUserErrorType value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:netmsg.pbRspLogin.result)
}
inline ::netmsg::EUserErrorType pbRspLogin::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::netmsg::EUserErrorType>(_impl_.result_);
}
inline void pbRspLogin::_internal_set_result(::netmsg::EUserErrorType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// uint64 userId = 2;
inline void pbRspLogin::clear_userid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = ::uint64_t{0u};
}
inline ::uint64_t pbRspLogin::userid() const {
  // @@protoc_insertion_point(field_get:netmsg.pbRspLogin.userId)
  return _internal_userid();
}
inline void pbRspLogin::set_userid(::uint64_t value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:netmsg.pbRspLogin.userId)
}
inline ::uint64_t pbRspLogin::_internal_userid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.userid_;
}
inline void pbRspLogin::_internal_set_userid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = value;
}

// uint32 banTime = 3;
inline void pbRspLogin::clear_bantime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantime_ = 0u;
}
inline ::uint32_t pbRspLogin::bantime() const {
  // @@protoc_insertion_point(field_get:netmsg.pbRspLogin.banTime)
  return _internal_bantime();
}
inline void pbRspLogin::set_bantime(::uint32_t value) {
  _internal_set_bantime(value);
  // @@protoc_insertion_point(field_set:netmsg.pbRspLogin.banTime)
}
inline ::uint32_t pbRspLogin::_internal_bantime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bantime_;
}
inline void pbRspLogin::_internal_set_bantime(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bantime_ = value;
}

// string verifyKey = 4;
inline void pbRspLogin::clear_verifykey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifykey_.ClearToEmpty();
}
inline const std::string& pbRspLogin::verifykey() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:netmsg.pbRspLogin.verifyKey)
  return _internal_verifykey();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void pbRspLogin::set_verifykey(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifykey_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:netmsg.pbRspLogin.verifyKey)
}
inline std::string* pbRspLogin::mutable_verifykey() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_verifykey();
  // @@protoc_insertion_point(field_mutable:netmsg.pbRspLogin.verifyKey)
  return _s;
}
inline const std::string& pbRspLogin::_internal_verifykey() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.verifykey_.Get();
}
inline void pbRspLogin::_internal_set_verifykey(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifykey_.Set(value, GetArena());
}
inline std::string* pbRspLogin::_internal_mutable_verifykey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.verifykey_.Mutable( GetArena());
}
inline std::string* pbRspLogin::release_verifykey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:netmsg.pbRspLogin.verifyKey)
  return _impl_.verifykey_.Release();
}
inline void pbRspLogin::set_allocated_verifykey(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifykey_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.verifykey_.IsDefault()) {
          _impl_.verifykey_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:netmsg.pbRspLogin.verifyKey)
}

// string account = 5;
inline void pbRspLogin::clear_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.ClearToEmpty();
}
inline const std::string& pbRspLogin::account() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:netmsg.pbRspLogin.account)
  return _internal_account();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void pbRspLogin::set_account(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:netmsg.pbRspLogin.account)
}
inline std::string* pbRspLogin::mutable_account() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account();
  // @@protoc_insertion_point(field_mutable:netmsg.pbRspLogin.account)
  return _s;
}
inline const std::string& pbRspLogin::_internal_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_.Get();
}
inline void pbRspLogin::_internal_set_account(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(value, GetArena());
}
inline std::string* pbRspLogin::_internal_mutable_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_.Mutable( GetArena());
}
inline std::string* pbRspLogin::release_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:netmsg.pbRspLogin.account)
  return _impl_.account_.Release();
}
inline void pbRspLogin::set_allocated_account(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.account_.IsDefault()) {
          _impl_.account_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:netmsg.pbRspLogin.account)
}

// -------------------------------------------------------------------

// pbSysInfo

// uint32 RuntimePlatform = 1;
inline void pbSysInfo::clear_runtimeplatform() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.runtimeplatform_ = 0u;
}
inline ::uint32_t pbSysInfo::runtimeplatform() const {
  // @@protoc_insertion_point(field_get:netmsg.pbSysInfo.RuntimePlatform)
  return _internal_runtimeplatform();
}
inline void pbSysInfo::set_runtimeplatform(::uint32_t value) {
  _internal_set_runtimeplatform(value);
  // @@protoc_insertion_point(field_set:netmsg.pbSysInfo.RuntimePlatform)
}
inline ::uint32_t pbSysInfo::_internal_runtimeplatform() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.runtimeplatform_;
}
inline void pbSysInfo::_internal_set_runtimeplatform(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.runtimeplatform_ = value;
}

// string UniqueId = 2;
inline void pbSysInfo::clear_uniqueid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uniqueid_.ClearToEmpty();
}
inline const std::string& pbSysInfo::uniqueid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:netmsg.pbSysInfo.UniqueId)
  return _internal_uniqueid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void pbSysInfo::set_uniqueid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uniqueid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:netmsg.pbSysInfo.UniqueId)
}
inline std::string* pbSysInfo::mutable_uniqueid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uniqueid();
  // @@protoc_insertion_point(field_mutable:netmsg.pbSysInfo.UniqueId)
  return _s;
}
inline const std::string& pbSysInfo::_internal_uniqueid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uniqueid_.Get();
}
inline void pbSysInfo::_internal_set_uniqueid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uniqueid_.Set(value, GetArena());
}
inline std::string* pbSysInfo::_internal_mutable_uniqueid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.uniqueid_.Mutable( GetArena());
}
inline std::string* pbSysInfo::release_uniqueid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:netmsg.pbSysInfo.UniqueId)
  return _impl_.uniqueid_.Release();
}
inline void pbSysInfo::set_allocated_uniqueid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uniqueid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uniqueid_.IsDefault()) {
          _impl_.uniqueid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:netmsg.pbSysInfo.UniqueId)
}

// string DeviceModel = 3;
inline void pbSysInfo::clear_devicemodel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.devicemodel_.ClearToEmpty();
}
inline const std::string& pbSysInfo::devicemodel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:netmsg.pbSysInfo.DeviceModel)
  return _internal_devicemodel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void pbSysInfo::set_devicemodel(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.devicemodel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:netmsg.pbSysInfo.DeviceModel)
}
inline std::string* pbSysInfo::mutable_devicemodel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_devicemodel();
  // @@protoc_insertion_point(field_mutable:netmsg.pbSysInfo.DeviceModel)
  return _s;
}
inline const std::string& pbSysInfo::_internal_devicemodel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.devicemodel_.Get();
}
inline void pbSysInfo::_internal_set_devicemodel(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.devicemodel_.Set(value, GetArena());
}
inline std::string* pbSysInfo::_internal_mutable_devicemodel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.devicemodel_.Mutable( GetArena());
}
inline std::string* pbSysInfo::release_devicemodel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:netmsg.pbSysInfo.DeviceModel)
  return _impl_.devicemodel_.Release();
}
inline void pbSysInfo::set_allocated_devicemodel(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.devicemodel_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.devicemodel_.IsDefault()) {
          _impl_.devicemodel_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:netmsg.pbSysInfo.DeviceModel)
}

// string OS = 4;
inline void pbSysInfo::clear_os() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.os_.ClearToEmpty();
}
inline const std::string& pbSysInfo::os() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:netmsg.pbSysInfo.OS)
  return _internal_os();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void pbSysInfo::set_os(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.os_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:netmsg.pbSysInfo.OS)
}
inline std::string* pbSysInfo::mutable_os() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_os();
  // @@protoc_insertion_point(field_mutable:netmsg.pbSysInfo.OS)
  return _s;
}
inline const std::string& pbSysInfo::_internal_os() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.os_.Get();
}
inline void pbSysInfo::_internal_set_os(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.os_.Set(value, GetArena());
}
inline std::string* pbSysInfo::_internal_mutable_os() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.os_.Mutable( GetArena());
}
inline std::string* pbSysInfo::release_os() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:netmsg.pbSysInfo.OS)
  return _impl_.os_.Release();
}
inline void pbSysInfo::set_allocated_os(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.os_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.os_.IsDefault()) {
          _impl_.os_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:netmsg.pbSysInfo.OS)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace netmsg


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_login_2eproto_2epb_2eh
